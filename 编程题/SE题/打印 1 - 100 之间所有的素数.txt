
//打印1-1000内所有素数
//两个循环  外面循环  数字  计数（初始0）
            	内循环 进行计算  数字%内循环i ==0 则计数+1
            	计数==2（自身和1） 输出外循环数
  
// 		 	int i=2
			for (; i <= Math.sqrt(n); i++)
				数除i余数是0则不是素数（break退出），
			否则是素数


public class vik {
	public static void main(String[] args) {
	//打印1-1000内所有素数
		if(n <= 0) {
	            System.out.println(n+"不是素数");
	            return;
	        }
		for(int i=1;i<=1000;i++){
			int count=0;
			for(int j=1;j<=i;j++){
				if(i%j==0){
					count++;
				}
			}
			if(count==2){
				System.out.println(i);
			}
		}
 	}
}



public static void main4(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        if(n <= 0) {
            System.out.println(n+"不是素数");
            return;
        }
        int i = 2;
        for (; i <= Math.sqrt(n); i++) {
            if(n % i == 0) {
                System.out.println(n+"不是素数");
                break;
            }
        }
        //代码走到第23行，有2中情况：
        //1、循环条件退出（素数）    2、遇到break(不是素数)
        if(i > Math.sqrt(n)) {
            System.out.println(n+"是素数！");
        }
    }

