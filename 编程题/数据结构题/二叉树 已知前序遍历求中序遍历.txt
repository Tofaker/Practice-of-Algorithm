

已知前序遍历 求中序遍历

	思路：
	前序 推出 二叉树  二叉树进行中序遍历

class Node {
    char val;
    Node left;
    Node right;
    Node() {}
    Node(char val) { this.val = val; }
    Node(char val, Node left, Node right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}


求二叉树  root就是二叉树的根节点
根据已知str求二叉树(#是为空)

	public int i = 0;
    public Node createTreeByString(String str){
        Node root = null;
        if (str.charAt(i) != '#'){
            root = new Node(str.charAt(i));
            i++;
            root.left = createTreeByString(str);
            root.right = createTreeByString(str);
        }else {
            i++;
        }
        return root;
    }


    再进行中序遍历
    void inOrderTraversal(Node root){
        if (root == null) return;
        inOrderTraversal(root.left);
        System.out.println(root.val);
        inOrderTraversal(root.right);
    }