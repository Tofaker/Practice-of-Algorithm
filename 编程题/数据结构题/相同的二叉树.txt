

给定两个二叉树，编写一个函数来检验它们是否相同。

如果两个树在结构上相同，并且节点具有相同的值，则认为它们是相同的。


	1. 一个为空 另一个不为空  返回false
	2. 两个都为空 返回true
	3. 都不为空 但值不相同 返回false

	核心  递归 左 和 右 的全部

		4. isSameTree(p.left,q.left) && isSameTree(p.right,q.right);





public boolean isSameTree(TreeNode p, TreeNode q) {
        if (p == null ^ q == null) return false;	//可以与第三行结合
        if (p == null && q == null) return true;
        if (p.val != q.val) return false;   	//可以与第一行结合

        //结合后的	if (p == null ^ q == null || p.val != q.val) return false;
        
        return isSameTree(p.left,q.left)&&isSameTree(p.right,q.right);

    }


