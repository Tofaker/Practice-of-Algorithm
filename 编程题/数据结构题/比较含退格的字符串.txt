给定 S 和 T 两个字符串，当它们分别被输入到空白的文本编辑器后，判断二者是否相等，并返回结果。 # 代表退格字符。

注意：如果对空文本输入退格字符，文本继续为空。

链接：https://leetcode-cn.com/problems/backspace-string-compare


eg：输入：S = "ab#c", T = "ad#c"
	输出：true
	解释：S 和 T 都会变成 “ac”。

利用栈就可以




class Solution {
    public  boolean backspaceCompare(String S, String T) {
        Stack<Character> stack1 = delete(S);
        Stack<Character> stack2 = delete(T);
        if(stack1.isEmpty() && stack2.isEmpty()) return true;
    
        while (!stack1.isEmpty() && !stack2.isEmpty()){
            if (stack1.pop() != stack2.pop()) return false;
        }
        if(stack1.isEmpty() ^ stack2.isEmpty()) return false;
        return true;
    }
    public static Stack<Character> delete(String S){
    Stack<Character> stack1 = new Stack<>();
    for (int i = 0; i <S.length() ; i++) {
        char tmp = S.charAt(i);
        if (!stack1.isEmpty()){
            if (tmp == '#') {
                stack1.pop();
            } else {
                stack1.push(tmp);
            }
        }else if (stack1.isEmpty()){
            if (tmp == '#'){
                continue;
            } else{
                stack1.push(tmp);
            }
        }
    }
    return stack1;
    }
}