




思路 ：类似于打扑克牌，揭牌，有序放入手牌







//插入排序:每次取后面的元素存放于tmp
    // tmp依次与前面的元素比大小，小：arr向后移动，大：退出循环 tmp放于arr j+1中
    public static void insertSort(int[] array){
        long start = System.currentTimeMillis();//算时间
        for (int i = 1; i < array.length; i++) {
            int tmp = array[i];
            int j = i-1;
            for (;j >= 0; j--){
                if (array[j] > tmp){
                    array[j+1] = array[j];
                }else {
                    break;
                }
            }
            array[j+1] = tmp;//加一是因为 j+1 是放置的位置  写一下过程就清楚了
        }
    }
    /*稳定性：稳定 没有跳跃
    时间复杂度：最好情况下：O(n) 最坏O(n^2)
    空间复杂度：O(1)
    特点：越有序 越快
    */